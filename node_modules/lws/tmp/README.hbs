[![view on npm](http://img.shields.io/npm/v/lws.svg)](https://www.npmjs.org/package/lws)
[![npm module downloads](http://img.shields.io/npm/dt/lws.svg)](https://www.npmjs.org/package/lws)
[![Build Status](https://travis-ci.org/lwsjs/lws.svg?branch=master)](https://travis-ci.org/lwsjs/lws)
[![Dependency Status](https://david-dm.org/lwsjs/lws.svg)](https://david-dm.org/lwsjs/lws)
[![Coverage Status](https://coveralls.io/repos/github/lwsjs/lws/badge.svg?branch=master)](https://coveralls.io/github/lwsjs/lws?branch=master)
[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)

# lws

A modular, server application shell for creating a personalised local web server. Intended to support rapid, full-stack Javascript development.

  * Run from the command line or extend to create a more specialised tool
  * Create and share features

## Command line usage

`lws` is a command-line tool, install it by running `npm install -g lws`. Here's a quick look at the usage:

```
$ lws --help

lws

  A modular server application shell for creating a personalised local web server to support productive, full-stack Javascript development.

Synopsis

  $ ws [--verbose] [--config-file file] [<server options>] [<middleware options>]
  $ ws --config
  $ ws --help
  $ ws --version

General

  -h, --help               Print these usage instructions.
  --config                 Print the active config.
  -c, --config-file file   Config filename to use, defaults to "lws.config.js".
  -v, --verbose            Verbose output.
  --version                Print the version number.

Server

  -p, --port number     Web server port.
  --hostname string     The hostname (or IP address) to listen on. Defaults to 0.0.0.0.
  --stack feature ...   Feature stack.
  --key file            SSL key. Supply along with --cert to launch a https server.
  --cert file           SSL cert. Supply along with --key to launch a https server.
  --https               Enable HTTPS using a built-in key and cert, registered to the domain
                        127.0.0.1.

Middleware

  No middleware specified.

  Project home: https://github.com/lwsjs/lws
```

Running `lws` launches a web server.

```
$ lws
Serving at http://mbp.local:8000, http://127.0.0.1:8000, http://192.168.0.32:8000
```

However, by default it's empty. Any resource requested will return `404 Not Found`.

```
$ curl -I http://127.0.0.1:8000/README.md

HTTP/1.1 404 Not Found
Date: Wed, 22 Mar 2017 20:41:07 GMT
Connection: keep-alive
```

So, install one or more features and pass their names to `--stack`. Notice the "Middleware" section of the usage guide now contains additional options added by the `lws-static` feature:

```
$ npm install lws-static

$ npm --stack lws-static --help

...

Middleware

  -d, --directory path     Root directory, defaults to the current directory.
  --static.maxage number   Browser cache max-age in milliseconds.
  --static.defer           If true, serves after `yield next`, allowing any downstream middleware to
                           respond first.
  --static.index path      Default file name, defaults to `index.html`.

```

By launching `lws` with this feature we're now able to serve static files.

```
$ lws --stack lws-static
Serving at http://mbp.local:8000, http://127.0.0.1:8000, http://192.168.0.32:8000

$ curl -I http://127.0.0.1:8000/README.md

HTTP/1.1 200 OK
Content-Length: 3286
Last-Modified: Wed, 22 Mar 2017 00:22:21 GMT
Cache-Control: max-age=0
Content-Type: text/x-markdown; charset=utf-8
Date: Wed, 22 Mar 2017 20:39:18 GMT
Connection: keep-alive
```

You can use pre-built features or make your own.

```js
class Feature {
  optionDefinitions () {
    return [
      { name: 'team', type: String }
    ]
  }
  middleware (options) {
    return (ctx, next) => {
      ctx.body = `Your team: ${options.team}`
      await next()
    }
  }
}

module.exports = Feature
```

If you want a server with all the common features pre-installed, look at [local-web-server](https://github.com/75lb/local-web-server).

## Install

Command-line tool:

```
$ npm install -g lws
```

Install the API for use in nodejs:

```
$ npm install lws --save
```

# API Reference

{{#module name="lws"}}{{>docs}}{{/module}}

# Feature interface

{{#module name="feature"}}{{>docs}}{{/module}}

* * *

&copy; 2016-17 Lloyd Brookes \<75pound@gmail.com\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).
